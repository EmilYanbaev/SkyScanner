{"version":3,"sources":["decryptionToken/decryption.js","Server API/avia.js","redux/sagas.js","redux/store.js","Component/ViewContentControl.jsx","hoc/withPreloaderRedirect.js","Component/InitializeApp.jsx","App.js","reportWebVitals.js","index.js","redux/reducers/authReducer.js"],"names":["getDecryptionToken","key","String","prototype","replaceAt","index","replacement","this","substr","length","token","slice","i","fromCharCode","charCodeAt","aviaApi","axios","get","sagaWatcher","sagaAuthWorker","takeEvery","SIGN_IN","data","pass","call","success","console","log","saga","createSagaMiddleWare","reducers","combineReducers","auth","authReducer","form","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","__store","run","LoginContainer","React","lazy","SearchContainer","Component","PreloadRedirectContainer","path","props","isLogin","passThroughProps","to","withRouter","connect","state","fallback","component","InitializeApp","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","initialState","id","email","login","captchaUrl","action","type","signIn"],"mappings":"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","file":"static/js/main.2d72c118.chunk.js","sourcesContent":["//За 2 дня сложно успеть сделать все круто\r\n//Так что остановимся на таклм простом шифровании по ключу :)\r\n//Не обращаем внимание на сложность o(2n)\r\n\r\nexport let getDecryptionToken = (key)=>{\r\n    String.prototype.replaceAt = function (index, replacement) {\r\n        return this.substr(0, index) + replacement + this.substr(index + replacement.length);\r\n    }\r\n\r\n    let token = \"ikgdhÚjgjgmfn°ghfgÛeidl\"\r\n\r\n    while(key.length != token.length)\r\n    {\r\n        if(key.length<token.length)\r\n        key += key;\r\n        if(key.length>token.length)\r\n        key = key.slice(0,key.length-1)\r\n    }\r\n\r\n    for (let i = 0; i < token.length; i++)\r\n    token = token.replaceAt(i, String.fromCharCode(token.charCodeAt(i) - key.charCodeAt(i)))\r\n    return token\r\n}","import axios from \"axios\"\r\n\r\nexport const aviaApi = {\r\n\r\n    tryProxy(token){\r\n        return axios.get(`https://intense-caverns-46819.herokuapp.com/http://api.travelpayouts.com/v1/prices/cheap?origin=MOW&destination=HKT&depart_date=2017-11&return_date=2017-12&token=${token}`)\r\n    }\r\n}\r\n","import {call, put, takeEvery} from \"redux-saga/effects\"\r\nimport { SIGN_IN } from \"./reducers/authReducer\"\r\nimport {getDecryptionToken} from \"../decryptionToken/decryption\"\r\nimport { aviaApi } from \"../Server API/avia\"\r\nexport function* sagaWatcher(){\r\n    yield takeEvery(SIGN_IN,sagaAuthWorker)\r\n}\r\n\r\nfunction* sagaAuthWorker({data}){\r\n    let token = getDecryptionToken(data.pass)\r\n    debugger;\r\n    const success = yield call(aviaApi.tryProxy,token)\r\n    console.log(success);\r\n}\r\n","import { applyMiddleware, combineReducers, createStore,compose } from \"redux\"\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport createSagaMiddleWare from \"redux-saga\"\r\nimport authReducer from \"./reducers/authReducer\";\r\nimport {sagaWatcher } from \"./sagas\";\r\n\r\nconst saga = createSagaMiddleWare();\r\n\r\nconst reducers = combineReducers(\r\n    {\r\n        auth: authReducer,\r\n        form: formReducer\r\n    }\r\n)\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(saga)))\r\nwindow.__store = store;\r\n\r\nsaga.run(sagaWatcher)\r\n\r\nexport default store","import React, { Suspense } from \"react\"\r\nimport { Route, Switch } from \"react-router-dom\"\r\nimport { compose } from \"redux\"\r\nimport { withPreloadRedirect } from \"../hoc/withPreloaderRedirect\"\r\n\r\nconst LoginContainer = React.lazy(() => import(\"./LoginPage/LoginContainer\"))\r\nconst SearchContainer = React.lazy(()=> import(\"./SearchPage/SearchContainer\"))\r\nlet ViewContentControl = (props) => {\r\n    return (\r\n        <Suspense fallback={<div>LOADING</div>} >\r\n            <Switch>\r\n                <Route path=\"/login\" component={LoginContainer} />\r\n                <Route path=\"/search\" component={SearchContainer} />\r\n            </Switch>\r\n        </Suspense>\r\n    )\r\n}\r\n\r\nexport default compose(withPreloadRedirect)(ViewContentControl)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\n\r\n\r\nexport const withPreloadRedirect = (Component) => {\r\n    class PreloadRedirectContainer extends React.Component {\r\n        render() {\r\n            let path = (this.props.isLogin)?\"/search\":\"/login\";\r\n            let { isLogin, ...passThroughProps } = this.props\r\n\r\n            return (<>\r\n                <Component {...passThroughProps} />\r\n                <Redirect to={path} />\r\n            </>)\r\n        }\r\n    }\r\n\r\n    const mapStateToProps = (state) => {\r\n        return {\r\n            isLogin: state.auth.isLogin\r\n        }\r\n    }\r\n    return withRouter(connect(mapStateToProps)(PreloadRedirectContainer))\r\n}\r\n","import ViewContentControl from \"./ViewContentControl\"\r\n\r\nlet InitializeApp = (props) => {\r\n    return (\r\n        <>\r\n            <ViewContentControl />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InitializeApp","import './App.css';\r\nimport store from './redux/store';\r\nimport { BrowserRouter, HashRouter } from \"react-router-dom\"\r\nimport { Provider } from 'react-redux';\r\nimport InitializeApp from './Component/InitializeApp';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Provider store = {store}>\r\n      <HashRouter >\r\n      {/* <BrowserRouter> */}\r\n        <InitializeApp />\r\n      {/* </BrowserRouter> */}\r\n      </HashRouter>\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","\r\nexport const SIGN_IN = \"auth/SIGN_IN\"\r\n// export const SET_IS_LOGIN = \"auth/SET_IS_LOGIN\"\r\n// const SET_AUTH_DATA = \"auth/SET_AUTH_DATA\";\r\n// const CLEAR_DATA = \"auth/CLEAR_DATA_AUTH\"\r\n// const GET_CAPTCHA_SUCCESS = \"auth/GET_CAPTCHA_SUCCESS\"\r\n\r\nconst initialState = {\r\n    id: null, \r\n    email: null, \r\n    login: null,\r\n    isLogin: false,\r\n    captchaUrl: null,\r\n}\r\n\r\nlet authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        // case SET_IS_LOGIN:\r\n        //     return {...state,isLogin:!state.isLogin}\r\n        // case SET_AUTH_DATA:\r\n        //     return { ...state, ...action.data, isLogin: action.isLogin }\r\n        // case GET_CAPTCHA_SUCCESS:\r\n        //     return {...state,captchaUrl:action.captchaUrl}\r\n        // case CLEAR_DATA:\r\n        //     return initialState\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default authReducer;\r\n\r\nexport const signIn = (data)=>({type:SIGN_IN,data})\r\n\r\n// export const setToken = (pass)=>{\r\n// }\r\n// export const setIsLogin = ()=>({type:SET_IS_LOGIN})"],"sourceRoot":""}