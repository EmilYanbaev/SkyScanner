{"version":3,"sources":["redux/reducers/authReducer.js","decryptionToken/decryption.js","Server API/avia.js","redux/sagaWorkers/authWorker.js","redux/sagas.js","redux/store.js","Component/ViewContentControl.jsx","hoc/withPreloaderRedirect.js","Component/InitializeApp.jsx","App.js","reportWebVitals.js","index.js"],"names":["SIGN_IN","SIGN_SUCCESS","initialState","isLogin","authReducer","state","action","type","signIn","data","signSuccess","getDecryptionToken","key","String","prototype","replaceAt","index","replacement","this","substr","length","token","slice","i","fromCharCode","charCodeAt","aviaApi","axios","get","response","sagaAuthWorker","pass","call","isSuccess","error","put","stopSubmit","_error","sessionStorage","setItem","sagaWatcher","takeEvery","saga","createSagaMiddleWare","reducers","combineReducers","auth","form","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","__store","run","LoginContainer","React","lazy","SearchContainer","Component","PreloadRedirectContainer","path","props","location","pathname","passThroughProps","to","withRouter","connect","fallback","component","isAuthorized","useEffect","getItem","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f51a8acf.chunk.js","sourcesContent":["\r\nexport const SIGN_IN = \"auth/SIGN_IN\"\r\nexport const SIGN_SUCCESS = \"auth/SIGN_SUCCESS\"\r\n\r\nconst initialState = {\r\n    isLogin: false,\r\n}\r\n\r\nlet authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SIGN_SUCCESS:\r\n            return {...state,isLogin:true};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default authReducer;\r\n\r\nexport const signIn = (data)=>({type:SIGN_IN,data})\r\nexport const signSuccess = ()=>({type:SIGN_SUCCESS})","//За 2 дня сложно успеть сделать все круто\r\n//Так что остановимся на таклм простом шифровании по ключу :)\r\n//Не обращаем внимание на сложность o(2n)\r\n\r\nexport let getDecryptionToken = (key)=>{\r\n    String.prototype.replaceAt = function (index, replacement) {\r\n        return this.substr(0, index) + replacement + this.substr(index + replacement.length);\r\n    }\r\n\r\n    let token = \"ikgdhÚjgjgmfn°ghfgÛeidl\"\r\n\r\n    while(key.length != token.length)\r\n    {\r\n        if(key.length<token.length)\r\n        key += key;\r\n        if(key.length>token.length)\r\n        key = key.slice(0,key.length-1)\r\n    }\r\n\r\n    for (let i = 0; i < token.length; i++)\r\n    token = token.replaceAt(i, String.fromCharCode(token.charCodeAt(i) - key.charCodeAt(i)))\r\n    return token\r\n}","import axios from \"axios\"\r\n\r\nexport const aviaApi = {\r\n\r\n    async tryToken(token) {\r\n        try {\r\n            const response = await axios.get(`https://intense-caverns-46819.herokuapp.com/http://api.travelpayouts.com/v1/prices/cheap?origin=MOW&destination=HKT&depart_date=2017-11&return_date=2017-12&token=${token}`)\r\n            return response.data\r\n        } catch (error) {\r\n            if (error.response) {\r\n                return error.response.data\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { call, put} from \"redux-saga/effects\"\r\nimport { getDecryptionToken } from \"../../decryptionToken/decryption\"\r\nimport { aviaApi } from \"../../Server API/avia\"\r\nimport { stopSubmit } from \"redux-form\"\r\nimport { signSuccess } from \"../reducers/authReducer\"\r\n\r\nexport function* sagaAuthWorker({ data }) {\r\n    let token = getDecryptionToken(data.pass)\r\n    const isSuccess = yield call(aviaApi.tryToken, token)\r\n    if (isSuccess.error.length > 0)\r\n       yield put(stopSubmit(\"login\", { _error: isSuccess.error }))\r\n    else{\r\n        yield put(signSuccess())\r\n        sessionStorage.setItem(\"token\",token)\r\n    }\r\n}","import { SIGN_IN } from \"./reducers/authReducer\"\r\n\r\nimport {takeEvery } from \"redux-saga/effects\"\r\n\r\nimport { sagaAuthWorker } from \"./sagaWorkers/authWorker\"\r\n\r\nexport function* sagaWatcher() {\r\n    yield takeEvery(SIGN_IN, sagaAuthWorker)\r\n}\r\n\r\n\r\n","import { applyMiddleware, combineReducers, createStore,compose } from \"redux\"\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport createSagaMiddleWare from \"redux-saga\"\r\nimport authReducer from \"./reducers/authReducer\";\r\nimport {sagaWatcher } from \"./sagas\";\r\n\r\nconst saga = createSagaMiddleWare();\r\n\r\nconst reducers = combineReducers(\r\n    {\r\n        auth: authReducer,\r\n        form: formReducer\r\n    }\r\n)\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(saga)))\r\nwindow.__store = store;\r\n\r\nsaga.run(sagaWatcher)\r\n\r\nexport default store","import React, { Suspense } from \"react\"\r\nimport { Route, Switch } from \"react-router-dom\"\r\nimport { compose } from \"redux\"\r\nimport { withPreloadRedirect } from \"../hoc/withPreloaderRedirect\"\r\n\r\nconst LoginContainer = React.lazy(() => import(\"./LoginPage/LoginContainer\"))\r\nconst SearchContainer = React.lazy(()=> import(\"./SearchPage/SearchContainer\"))\r\nlet ViewContentControl = (props) => {\r\n    return (\r\n        <Suspense fallback={<div>LOADING</div>} >\r\n            <Switch>\r\n                <Route path=\"/login\" component={LoginContainer} />\r\n                <Route path=\"/search\" component={SearchContainer} />\r\n            </Switch>\r\n        </Suspense>\r\n    )\r\n}\r\n\r\nexport default compose(withPreloadRedirect)(ViewContentControl)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\n\r\n\r\nexport const withPreloadRedirect = (Component) => {\r\n    class PreloadRedirectContainer extends React.Component {\r\n        render() {\r\n            let path\r\n\r\n            if (this.props.isLogin)\r\n                if (this.props.location.pathname === \"/login\" || this.props.location.pathname === \"/\" || this.props.location.pathname === \"/SkyScanner\")\r\n                    path = \"/search\"\r\n                else\r\n                    path = this.props.location.pathname;\r\n            else path = \"/login\";\r\n\r\n            let { isLogin, ...passThroughProps } = this.props\r\n\r\n            return (<>\r\n                <Component {...passThroughProps} />\r\n                <Redirect to={path} />\r\n            </>)\r\n        }\r\n    }\r\n\r\n    const mapStateToProps = (state) => {\r\n        return {\r\n            isLogin: state.auth.isLogin\r\n        }\r\n    }\r\n    return withRouter(connect(mapStateToProps)(PreloadRedirectContainer))\r\n}\r\n","import { useEffect } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { signSuccess } from \"../redux/reducers/authReducer\"\r\nimport ViewContentControl from \"./ViewContentControl\"\r\n\r\nlet InitializeApp = (props) => {\r\n    useEffect(()=>{\r\n        if(sessionStorage.getItem(\"token\"))\r\n        props.isAuthorized();\r\n    },[])\r\n    return (\r\n        <>\r\n            <ViewContentControl />\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default connect(null,{isAuthorized:signSuccess})(InitializeApp)","import './App.css';\r\nimport store from './redux/store';\r\nimport { BrowserRouter, HashRouter } from \"react-router-dom\"\r\nimport { Provider } from 'react-redux';\r\nimport InitializeApp from './Component/InitializeApp';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Provider store={store}>\r\n        <HashRouter >\r\n          {/* <BrowserRouter> */}\r\n          <InitializeApp />\r\n          {/* </BrowserRouter> */}\r\n        </HashRouter>\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}